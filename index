import tkinter as tk
from tkinter import messagebox

# Dizionario con categorie, punteggi e domande
questions = {
    "Storia": {
        100: ("In che anno è caduto l'Impero Romano d'Occidente?", "476"),
        200: ("Chi era l'imperatore durante la nascita di Gesù?", "Augusto"),
        300: ("Chi ha scoperto l'America?", "Cristoforo Colombo"),
        400: ("Chi era il re di Francia durante la Rivoluzione Francese?", "Luigi XVI"),
        500: ("Quando è finita la Seconda Guerra Mondiale?", "1945")
    },
    "Scienza": {
        100: ("Qual è il simbolo chimico dell'acqua?", "H2O"),
        200: ("Qual è il pianeta più grande del Sistema Solare?", "Giove"),
        300: ("Chi ha formulato la teoria della relatività?", "Einstein"),
        400: ("Qual è l'elemento più abbondante nell'atmosfera terrestre?", "Azoto"),
        500: ("Qual è la velocità della luce?", "299792 km/s")
    },
    "Geografia": {
        100: ("Qual è la capitale della Francia?", "Parigi"),
        200: ("Qual è il fiume più lungo del mondo?", "Nilo"),
        300: ("Qual è il deserto più grande del mondo?", "Sahara"),
        400: ("In quale continente si trova l'Egitto?", "Africa"),
        500: ("Qual è la montagna più alta del mondo?", "Everest")
    },
    "Sport": {
        100: ("Quanti giocatori ha una squadra di calcio?", "11"),
        200: ("Chi ha vinto più mondiali di calcio?", "Brasile"),
        300: ("Qual è lo sport più popolare al mondo?", "Calcio"),
        400: ("In che anno si sono svolte le prime Olimpiadi moderne?", "1896"),
        500: ("Chi è conosciuto come il re del tennis?", "Roger Federer")
    },
    "Cinema": {
        100: ("Chi ha diretto Titanic?", "James Cameron"),
        200: ("Chi interpreta Jack Sparrow nei Pirati dei Caraibi?", "Johnny Depp"),
        300: ("Qual è il film con il maggior incasso di sempre?", "Avatar"),
        400: ("Chi ha diretto Il Padrino?", "Francis Ford Coppola"),
        500: ("Quale film ha vinto più Oscar?", "Ben-Hur")
    }
}

# Punteggio totale
score = 0

# Funzione per mostrare le domande
def show_question(category, points):
    global score
    question, answer = questions[category][points]
    
    # Finestra popup per le domande
    question_window = tk.Toplevel()
    question_window.title("Domanda")
    question_window.geometry("400x200")
    question_window.configure(bg='white')
    
    tk.Label(question_window, text=f"{question}", font=("Arial", 14), wraplength=350, bg='white').pack(pady=20)
    answer_entry = tk.Entry(question_window, font=("Arial", 14))
    answer_entry.pack(pady=10)
    
    def check_answer():
        user_answer = answer_entry.get()
        if user_answer.lower() == answer.lower():
            messagebox.showinfo("Risposta", "✔️ Corretto!")
            global score
            score += points
        else:
            messagebox.showinfo("Risposta", f"❌ Sbagliato! La risposta corretta era: {answer}")
        buttons[category][points].config(state=tk.DISABLED)
        question_window.destroy()
    
    submit_btn = tk.Button(question_window, text="Invia Risposta", command=check_answer, bg='red', fg='white')
    submit_btn.pack(pady=10)

# Interfaccia grafica
root = tk.Tk()
root.title("Rischiatutto")
root.geometry("900x700")
root.configure(bg='#8B0000')

# Titolo principale
header = tk.Label(root, text="RISCHIATUTTO", font=("Arial", 28, "bold"), bg='#8B0000', fg='white')
header.pack(pady=10)

# Griglia delle categorie
frame = tk.Frame(root, bg='#8B0000')
frame.pack()

buttons = {}

for i, category in enumerate(questions.keys()):
    cat_label = tk.Label(frame, text=category, font=("Arial", 16, "bold"), bg='#8B0000', fg='white')
    cat_label.grid(row=0, column=i, padx=10, pady=5)
    buttons[category] = {}
    for j, points in enumerate(sorted(questions[category].keys())):
        btn = tk.Button(frame, text=str(points), font=("Arial", 14), width=10, height=2,
                         bg='white', fg='red',
                         command=lambda c=category, p=points: show_question(c, p))
        btn.grid(row=j+1, column=i, padx=5, pady=5)
        buttons[category][points] = btn

# Avvio
root.mainloop()
